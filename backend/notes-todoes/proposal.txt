Your project idea
Star Wars Social. Where all star wars fans come to unite. All star wars fans big and small can come to Star Wars Social to talk about, like, review and make favorites of all movies, shows, and games.

MVP
have a page for all SW movies. ✅
have a page for all SW tv-shows. ✅
have a page for all SW games. ✅
have a like button. ✅
have filter options for all 3 main pages, filter by most likes ✅
 or most recent.
once a movie/tv-show/game is selected you will be able to comment, view links to buy/stream, and load trailer. ✅
full CRUD on comments:

leave a review/comment on any post movie/tv-show/game. ✅
comments will show on page. ✅
update a review/comment.
delete a review/comment. ✅
^^^^^^^^^^^^^^^^^^^
have profile where you can add favorites.

Stretch Goals
register profile. ✅
login to profile. ✅
have To Watch/play CRUD list on profile.
have already Watched CRUD list on profile.
view other profiles
Front-end
Are you planning to use Handlebars, EJS, or DOM-manipulation for your HTML?
It is OK to change this as you go

Boostrap
EJS
DOM
List of Mongoose models and their properties
Movies:
const movies = new mongoose.Schema({
title: {type: String, required: true},
episode: {type: String, required: true},
img: {type: String, required: true},
links: {
buy: String,
rent: String,
trailer: String
},
likes: Number,
comments: String,
}, {timestamp: true} )

TvShows:
const TvShows = new mongoose.Schema({
title: {type: String, required: true},
seasons: {type: Number, required: true},
episodes: {type: Number, required: true},
img: {type: String, required: true},
links: {
buy: String,
stream: String,
trailer: String
},
likes: Number,
comments: String,
}, {timestamp: true} )

Games:
const GameSchema = new mongoose.Schema({
title: {type: String, required: true},
img: {type: String, required: true},
links: {
buy: String,
rent: String,
trailer: String
},
likes: Number,
comments: String,
}, {timestamp: true} )

List of Routes
Get '/movies' display movies, 2X for tv-shows and games.
Get 'movies/:id'
create 'movies/:id' make comment on a movie
put 'movies/:id' edit comment on a movie
delete 'movies/:id' delete comment
put 'movies/:id/like' to like a item, update the amount of likes
get '/profile' get profile favorites page
get '/profile/towatch'

